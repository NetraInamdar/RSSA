swagger: "2.0"
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0"
  title: Swagger ReST Article
consumes:
  - application/json
produces:
  - application/json

basePath: /

# Paths supported by the server application
paths:
  #/topn/get_topn/{userID}/{num_recommendations}:
  /topn/get_topn/{userID}:
    get:
      operationId: topn.get_topn
      tags:
      - topn
      summary: Retrieve recommendations from the dataset, generate the recommendations for the user 
      description: Based on the previous selections of the user, generate the final Top N recommendations for the user 
      parameters:
      - name: userID
        in: path
        description: user_id of person whose ratings you want
        type: integer
        required: True
      - name: num_recommendations
        in: query
        description: number of recommendations you want
        type: integer
        required: False
      responses:
        200:
          description: Successfully generate the recommendations for user based on the condition they are in
          schema:
            type: array
            items:
              properties:
                item:
                  type: integer
                score:
                  type: integer

  /hipitems/hipItems/{userID}:
    get:
      operationId: hipitems.hipItems
      tags:
      - hip items
      summary: ///////////
      description: /////////////
      parameters:
      - name: userID
        in: path
        description: user_id of person whose ratings you want
        type: integer
        required: True
      - name: num_recommendations
        in: query
        description: number of recommendations you want
        type: integer
        required: False
      responses:
        200:
          description: Successfully generate the recommendations for user based on the condition they are in
          schema:
            type: array
            items:
              properties:
                item:
                  type: integer
                score:
                  type: integer
                  
  /hateitems/hateItems/{userID}:
    get:
      operationId: hateitems.hateItems
      tags:
      - hate items
      summary: //////////////
      description: //////////////////
      parameters:
      - name: userID
        in: path
        description: user_id of person whose ratings you want
        type: integer
        required: True
      - name: num_recommendations
        in: query
        description: number of recommendations you want
        type: integer
        required: False
      responses:
        200:
          description: Successfully generate the recommendations for user based on the condition they are in
          schema:
            type: array
            items:
              properties:
                item:
                  type: integer
                score:
                  type: integer

  

